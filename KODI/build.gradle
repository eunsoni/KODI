plugins {
	id 'java'
	id 'war'
	id 'org.springframework.boot' version '3.2.1'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring Boot Starters
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	
	// MyBatis
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'
	testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.3'
	
	// Database
	runtimeOnly 'com.mysql:mysql-connector-j'
	
	// JSP Support
	providedRuntime 'org.apache.tomcat.embed:tomcat-embed-jasper'
	implementation 'org.glassfish.web:jakarta.servlet.jsp.jstl:2.0.0'
	providedCompile 'jakarta.servlet:jakarta.servlet-api:6.0.0'
	
	// Development Tools
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	
	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	
	// Test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	
	// Tomcat (provided for WAR deployment)
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
}

tasks.named('test') {
	useJUnitPlatform()
	// Skip tests for now (similar to Maven configuration)
	enabled = false
}

// WAR 파일 설정
war {
	archiveFileName = "${project.name}-${project.version}.war"
}

// Spring Boot 실행 시 JSP 경로 설정
springBoot {
	mainClass = 'kodi.KodiApplication'
}
